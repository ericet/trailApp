{"version":3,"file":"js/about.c32ebbbc.js","mappings":"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","sources":["webpack://trail-app/./src/views/DailyVoteView.vue","webpack://trail-app/./src/views/DailyVoteView.vue?9605","webpack://trail-app/./src/views/JoinView.vue","webpack://trail-app/./node_modules/marked/lib/marked.esm.js","webpack://trail-app/./src/assets/data/join.md","webpack://trail-app/./src/views/JoinView.vue?5a7c","webpack://trail-app/./src/views/MissingVoteView.vue","webpack://trail-app/./src/components/Report.vue","webpack://trail-app/./src/components/Report.vue?2aeb","webpack://trail-app/./src/views/MissingVoteView.vue?c070"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen py-5\">\r\n    <div class=\"overflow-x-auto w-full\">\r\n      <select\r\n        class=\"mx-auto max-w-4xl w-1/4 block p-2 mb-6 text-md text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n        @change=\"getListByDate($event)\"\r\n      >\r\n        <option :value=\"date\" v-for=\"date in options\" :key=\"date\">\r\n          {{ date }}\r\n        </option>\r\n      </select>\r\n      <table\r\n        class=\"mx-auto max-w-4xl w-full whitespace-nowrap rounded-lg bg-white divide-y divide-gray-300 overflow-hidden\"\r\n      >\r\n        <thead class=\"bg-gray-900\">\r\n          <tr class=\"text-white text-left\">\r\n            <th class=\"font-semibold text-sm uppercase px-6 py-4\"><i data-feather=\"user\" class=\"m-1\"></i></th>\r\n            <th\r\n              @click=\"sort('name')\"\r\n              class=\"font-semibold text-sm uppercase px-6 py-4\"\r\n            >\r\n              STEEM ID\r\n            </th>\r\n            <th\r\n              @click=\"sort('sp')\"\r\n              class=\"font-semibold text-sm uppercase px-6 py-4\"\r\n            >\r\n              STEEM Power\r\n            </th>\r\n            <th\r\n              @click=\"sort('score')\"\r\n              class=\"font-semibold text-sm uppercase px-6 py-4 text-center\"\r\n            >\r\n              Score\r\n            </th>\r\n            <th\r\n              @click=\"sort('incentive')\"\r\n              class=\"font-semibold text-sm uppercase px-6 py-4 text-center\"\r\n            >\r\n              Incentive\r\n            </th>\r\n            <th\r\n              @click=\"sort('hasVoted')\"\r\n              class=\"font-semibold text-sm uppercase px-6 py-4 text-center\"\r\n            >\r\n              Voted\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"divide-y divide-gray-200\">\r\n          <tr\r\n            v-for=\"member in sortedMembers\"\r\n            :key=\"member.name\"\r\n            :class=\"member.hasVoted ? 'bg-teal-100' : ''\"\r\n          >\r\n            <td class=\"px-6 py-4\">\r\n              <div class=\"inline-flex w-10 h-10\">\r\n                <a :href=\"'https://steem.buzz/@' + member.name\" target=\"_blank\">\r\n                  <img\r\n                    class=\"w-10 h-10 object-cover rounded-full\"\r\n                    v-bind:src=\"\r\n                      'https://steemitimages.com/u/' +\r\n                      member.name +\r\n                      '/avatar/small'\r\n                    \"\r\n                  />\r\n                </a>\r\n              </div>\r\n            </td>\r\n            <td class=\"px-6 py-4\">\r\n              <div class=\"flex items-center space-x-3\">\r\n                <div>\r\n                  <p>{{ member.name }}</p>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td class=\"px-6 py-4\">\r\n              <p class=\"\">{{ member.sp }}</p>\r\n            </td>\r\n            <td class=\"px-6 py-4 text-center\">\r\n              {{ member.score }}\r\n            </td>\r\n            <td class=\"px-6 py-4 text-center\">\r\n              {{ member.incentive }}\r\n            </td>\r\n            <td v-if=\"member.hasVoted\" class=\"px-6 py-4 text-center\">\r\n              <a\r\n                :href=\"\r\n                  'https://steem.buzz/@' + member.name + '/' + member.permlink\r\n                \"\r\n                class=\"text-sky-600\"\r\n                >Link</a\r\n              >\r\n            </td>\r\n            <td v-else class=\"px-6 py-4 text-center\">No</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport feather from 'feather-icons';\r\n\r\nexport default {\r\n   mounted() {\r\n    feather.replace();\r\n    this.setup();\r\n  },\r\n  updated() {\r\n    feather.replace();\r\n  },\r\n  data() {\r\n    return {\r\n      voteList: [],\r\n      options: [],\r\n      currentSort: 'hasVoted',\r\n      currentSortDir: 'desc',\r\n    };\r\n  },\r\n  computed: {\r\n    sortedMembers() {\r\n      // eslint-disable-next-line vue/no-side-effects-in-computed-properties\r\n      return this.voteList.sort((a, b) => {\r\n        let modifier = 1;\r\n        if (this.currentSortDir === 'desc') modifier = -1;\r\n        if (a[this.currentSort] < b[this.currentSort]) return -1 * modifier;\r\n        if (a[this.currentSort] > b[this.currentSort]) return 1 * modifier;\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    async setup(){\r\n      this.getDateOptions();\r\n      this.voteList = await this.getDailyVoteList(new Date());\r\n    },\r\n    sort(s) {\r\n      if (s === this.currentSort) {\r\n        this.currentSortDir = this.currentSortDir === 'asc' ? 'desc' : 'asc';\r\n      }\r\n      this.currentSort = s;\r\n    },\r\n    getDailyVoteList(date) {\r\n      return new Promise((resolve, reject) => {\r\n        const url = `${this.$store.state.api}/getList?date=${date}`;\r\n        axios\r\n          .get(url)\r\n          .then((response) => {\r\n            if (response.status == 200) {\r\n              let data = response.data;\r\n              let voteList = [];\r\n              for (let d of data) {\r\n                let hasVoted = d.permlink === null ? false : true;\r\n                let score = (d.votes / d.totalVotes).toFixed(2);\r\n                let incentive = '';\r\n                if (score >= 0.8) {\r\n                  incentive = '+' + ((score - 0.8) * 100).toFixed(2) + '%';\r\n                } else {\r\n                  incentive = '-' + ((1 - score) * 100).toFixed(2) + '%';\r\n                }\r\n                voteList.push({\r\n                  name: d.account,\r\n                  sp: d.sp,\r\n                  hasVoted: hasVoted,\r\n                  permlink: d.permlink,\r\n                  score: `${d.votes}/${d.totalVotes}=${score}`,\r\n                  incentive: incentive,\r\n                });\r\n              }\r\n              resolve(voteList);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    },\r\n\r\n    async getListByDate(event) {\r\n      let date = event.target.value;\r\n      let d = new Date(date);\r\n      d.toLocaleDateString('en-US', { timeZone: 'Asia/Shanghai' });\r\n      this.voteList = [];\r\n      this.voteList = await this.getDailyVoteList(d);\r\n    },\r\n    formatDate(date) {\r\n      let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n      if (month.length < 2) month = '0' + month;\r\n      if (day.length < 2) day = '0' + day;\r\n\r\n      return [year, month, day].join('-');\r\n    },\r\n    getDateOptions() {\r\n      let date = new Date().toLocaleString('en-US', {\r\n        timeZone: 'Asia/Shanghai',\r\n      });\r\n      let curr = new Date(date);\r\n      let first = curr.getDate();\r\n      for (let i = 0; i < 7; i++) {\r\n        let next = new Date(curr.getTime());\r\n        next.setDate(first - i);\r\n        this.options.push(this.formatDate(next.toString()));\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./DailyVoteView.vue?vue&type=template&id=7d45c0a9\"\nimport script from \"./DailyVoteView.vue?vue&type=script&lang=js\"\nexport * from \"./DailyVoteView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\schen\\\\Documents\\\\Fun Projects\\\\trailApp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <article\r\n      class=\"prose prose-slate mx-auto max-w-xl w-2/3 mb-2 mt-20 relative text-gray-700 \"\r\n      v-html=\"markdownToHtml\"\r\n    ></article>\r\n    {{ markdownData }}\r\n  </div>\r\n</template>\r\n<script>\r\nimport { marked } from 'marked';\r\nimport markdownData from '../assets/data/join.md';\r\n\r\nexport default {\r\n  computed: {\r\n    markdownToHtml() {\r\n      return marked.parse(markdownData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inline(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inline(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","export default \"HF21/22后，作者和审查收益五五分，这样的结果是，审查的收益变得比之前来的高。\\r\\n\\r\\n所以为了有效的获取点赞的同时，赚取更好的审查收益，CN跟赞团@cn-trail就这样诞生了~\\r\\n\\r\\n这个项目很简单，就是通过设置跟赞cn-trail。通过跟赞获取审查收益的同时，也会每天获得一次跟赞团的点赞。\\r\\n\\r\\n## 跟赞要求\\r\\n* 账号有效SP至少80SP（跟赞需要耗费RC，SP太少维持不了跟赞）\\r\\n\\r\\n\\r\\n## 跟赞设置\\r\\n1. 授权cn-trail\\r\\n通过https://steemlogin.com/authorize/cn-trail (没墙用户) \\r\\n或者https://steemconnect.wherein.mobi/authorize/cn-trail (有墙用户）\\r\\n2. 关注@cn-trail\\r\\n\\r\\n## 点赞规则\\r\\n* 北京时间0点，跟赞团程序将会查看每个团员的跟赞次数\\r\\n* 如果跟赞次数比例等于80%（比如10次跟赞团点赞，跟赞了8次），将获得团员的sp数量 * 跟赞倍数/总跟赞SP\\r\\n* 跟赞次数比例越高，还会获得额外的点赞。比如跟赞次数比是90%，会获得在原来点赞比重的基础下，额外获得10%点赞。比如原来要获得50%点赞，额外10%就是55%点赞。获得的最高额外点赞是20%\\r\\n* 如果跟赞次数比低于80%，获得的点赞将会根据跟赞次数比相应的减少。比如你的跟赞次数比是70%，你获得点赞是：团员SP数量 * 跟赞倍数/总跟赞SP * 0.7\\r\\n* 跟赞次数比低于10%的团员将不会获得当日的点赞\\r\\n\\r\\n## 浮动点赞倍数\\r\\n* 当cn-trail的VP低于85%时，点赞倍数将减少1x\\r\\n* 当cn-trail的VP高于92%时，点赞倍数将增加1x\\r\\n\\r\\n\\r\\n## 跟赞的好处是：\\r\\n\\r\\n* 每天获取至少10倍自身有效SP的点赞\\r\\n* 与其让账号上闲置的VP白白浪费掉，不如有效的跟赞赚取不错的审查收益\\r\\n* SP控制在自己的手上，自己想给喜欢的文章点赞，点的也有底气\\r\\n* 如果要退出，取消跟赞就行。不用像代理那样，需要5天把SP抽回\\r\\n\\r\\n**如果帖子带有“cn\\\"标签，会额外获得1%跟赞团点赞**\\r\\n\\r\\n**拒绝给搬砖帖点赞。如果发现，加入黑名单，不予点赞**\\r\\n\\r\\n**检查帖子的字数，如果字数少于50个字（包括符号），帖子点赞比例将会减半**\\r\\n\\r\\n\\r\\n如果你对跟赞有兴趣，并且有空闲的VP不知道怎么用，欢迎加入cn-trail跟赞团~！\\r\\n\";","import { render } from \"./JoinView.vue?vue&type=template&id=b7480eee\"\nimport script from \"./JoinView.vue?vue&type=script&lang=js\"\nexport * from \"./JoinView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\schen\\\\Documents\\\\Fun Projects\\\\trailApp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n\r\n  <div class=\"min-h-screen py-5\">\r\n     \r\n    <div class=\"overflow-x-auto w-full\">\r\n     <Report />\r\n      <table\r\n        class=\"mx-auto max-w-4xl w-full whitespace-nowrap rounded-lg bg-white divide-y divide-gray-300 overflow-hidden\">\r\n        <thead class=\"bg-gray-900\">\r\n          <tr class=\"text-white text-left\">\r\n            <th class=\"font-semibold text-sm uppercase px-6 py-4\"><i data-feather=\"user\" class=\"m-1\"></i></th>\r\n            <th @click=\"sort('name')\" class=\"font-semibold text-sm uppercase px-6 py-4\">\r\n              STEEM ID\r\n            </th>\r\n            <th @click=\"sort('sp')\" class=\"font-semibold text-sm uppercase px-6 py-4\">\r\n              STEEM Power\r\n            </th>\r\n            <th class=\"font-semibold text-sm uppercase px-6 py-4 text-center\">\r\n              {{ $t(\"post_link\") }}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"divide-y divide-gray-200\">\r\n          <tr v-for=\"member in sortedMembers\" :key=\"member.account\" :class=\"member.hasVoted ? 'bg-teal-100' : ''\">\r\n            <td class=\"px-6 py-4\">\r\n              <div class=\"inline-flex w-10 h-10\">\r\n                <a :href=\"'https://steem.buzz/@' + member.account\" target=\"_blank\">\r\n                  <img class=\"w-10 h-10 object-cover rounded-full\" alt=\"User avatar\" v-bind:src=\"\r\n                    'https://steemitimages.com/u/' +\r\n                    member.account +\r\n                    '/avatar/small'\r\n                  \" />\r\n                </a>\r\n              </div>\r\n            </td>\r\n            <td class=\"px-6 py-4\">\r\n              <div class=\"flex items-center space-x-3\">\r\n                <div>\r\n                  <p>{{ member.account }}</p>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td class=\"px-6 py-4\">\r\n              <p class=\"\">{{ member.sp }}</p>\r\n            </td>\r\n\r\n            <td class=\"px-6 py-4 text-center\">\r\n              <a :href=\"\r\n                'https://steem.buzz/@' + member.account + '/' + member.permlink\r\n              \" class=\"text-sky-600\">Link</a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport feather from 'feather-icons';\r\nimport Report from '@/components/Report.vue';\r\n\r\nexport default {\r\n    mounted() {\r\n        feather.replace();\r\n        this.setup();\r\n    },\r\n    updated() {\r\n        feather.replace();\r\n    },\r\n    data() {\r\n        return {\r\n            pendingList: [],\r\n            missingList: [],\r\n            steemid: \"\",\r\n            posts: [],\r\n            currentSort: \"sp\",\r\n            currentSortDir: \"desc\",\r\n        };\r\n    },\r\n    computed: {\r\n        sortedMembers() {\r\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\r\n            return this.pendingList.sort((a, b) => {\r\n                let modifier = 1;\r\n                if (this.currentSortDir === \"desc\")\r\n                    modifier = -1;\r\n                if (a[this.currentSort] < b[this.currentSort])\r\n                    return -1 * modifier;\r\n                if (a[this.currentSort] > b[this.currentSort])\r\n                    return 1 * modifier;\r\n                return 0;\r\n            });\r\n        },\r\n    },\r\n    methods: {\r\n        async setup() {\r\n            this.pendingList = await this.getPendingList();\r\n        },\r\n        sort(s) {\r\n            if (s === this.currentSort) {\r\n                this.currentSortDir = this.currentSortDir === \"asc\" ? \"desc\" : \"asc\";\r\n            }\r\n            this.currentSort = s;\r\n        },\r\n        getPendingList() {\r\n            return new Promise((resolve, reject) => {\r\n                const url = `${this.$store.state.api}/getPendings`;\r\n                let pendingList = [];\r\n                axios.get(url).then(function (response) {\r\n                    if (response.status == 200) {\r\n                        let data = response.data;\r\n                        for (let d of data) {\r\n                            pendingList.push({ account: d.account, sp: d.sp, date: d.date, permlink: d.permlink });\r\n                        }\r\n                        resolve(pendingList);\r\n                    }\r\n                }).catch(err => {\r\n                    reject(err);\r\n                });\r\n            });\r\n        },\r\n        \r\n    },\r\n    components: { Report }\r\n};\r\n</script>\r\n","<!-- eslint-disable vue/multi-word-component-names -->\r\n<template>\r\n    <div v-if=\"error\"\r\n        class=\"mx-auto max-w-4xl w-1/2 mb-5 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\r\n        role=\"alert\">\r\n        <span class=\"block sm:inline\">{{ error }}</span>\r\n        <span class=\"absolute top-0 bottom-0 right-0 px-4 py-3\" @click=\"close\">\r\n            <svg class=\"fill-current h-6 w-6 text-red-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\">\r\n                <title>Close</title>\r\n                <path\r\n                    d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\r\n            </svg>\r\n        </span>\r\n    </div>\r\n    <div v-if=\"message\"\r\n        class=\"mx-auto max-w-4xl w-1/2 mb-5 bg-teal-100 border border-teal-400 text-teal-700 px-4 py-3 rounded relative\"\r\n        role=\"alert\">\r\n        <span class=\"block sm:inline\">{{ message }}</span>\r\n        <span class=\"absolute top-0 bottom-0 right-0 px-4 py-3\" @click=\"close\">\r\n            <svg class=\"fill-current h-6 w-6 text-green-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\">\r\n                <title>Close</title>\r\n                <path\r\n                    d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\r\n            </svg>\r\n        </span>\r\n    </div>\r\n    <div class=\"mx-auto max-w-4xl w-1/2 mb-2 relative text-gray-700\">\r\n        <input class=\"w-full h-10 pl-3 pr-8 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline\"\r\n            type=\"text\" v-model=\"steemid\" :placeholder=\"$t('missing.enter_steem_id')\" @change=\"search\" />\r\n    </div>\r\n    <div class=\"mx-auto max-w-4xl w-1/2 mb-3 relative text-gray-700\">\r\n        <select v-model=\"selected\"\r\n            class=\"w-full h-10 pl-3 pr-8 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline disabled:cursor-not-allowed\"\r\n            :disabled=\"posts.length == 0\">\r\n            <option v-for=\"(post, index) in posts\" :key=\"index\" :value=\"post.permlink + '?' + post.created + 'Z'\">\r\n                【{{ formatDate(post.created + \"Z\") }}】{{ post.title }}</option>\r\n        </select>\r\n\r\n    </div>\r\n    <div class=\"flex mb-8\">\r\n        <div class=\"m-auto\">\r\n            <button type=\"button\"\r\n                class=\"h-10 px-5 text-indigo-100 bg-indigo-700 rounded disabled:cursor-not-allowed rounded-full focus:outline-none transition-colors duration-150 disabled:opacity-75\"\r\n                :disabled=\"posts.length == 0\" @click=\"submit\">\r\n                {{ $t(\"submit\") }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { api } from 'steem';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            steemid: '',\r\n            posts: [],\r\n            selected: '',\r\n            error: '',\r\n            message: ''\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        formatDate(date) {\r\n            var d = new Date(date),\r\n                month = '' + (d.getMonth() + 1),\r\n                day = '' + d.getDate(),\r\n                year = d.getFullYear();\r\n\r\n            if (month.length < 2) month = '0' + month;\r\n            if (day.length < 2) day = '0' + day;\r\n\r\n            return [year, month, day].join('-');\r\n        },\r\n        isValidAccount(account) {\r\n            return new Promise((resolve, reject) => {\r\n                api.lookupAccountNames([account], (err, result) => {\r\n                    if (!err) {\r\n                        result[0] === null ? resolve(false) : resolve(true);\r\n                    } else {\r\n                        reject(err);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        hasVoted(votes) {\r\n            for (let vote of votes) {\r\n                if (vote.voter === this.$store.state.account) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        setDate(date) {\r\n            date.setHours(0);\r\n            date.setMinutes(0);\r\n            date.setSeconds(0);\r\n            date.setMilliseconds(0);\r\n            return date;\r\n        },\r\n        getPosts(username) {\r\n            return new Promise((resolve, reject) => {\r\n                let posts = [];\r\n                api.getDiscussionsByBlog({ tag: username, limit: 50 }, (err, blogs) => {\r\n                    if (blogs && !err) {\r\n                        for (let blog of blogs) {\r\n                            let start = this.setDate(new Date());\r\n                            let created = new Date(blog.created + \"Z\");\r\n                            let voted = this.hasVoted(blog.active_votes);\r\n                            if (!voted && created < start.getTime() && (new Date() - created) < 6 * 24 * 60 * 60 * 1000 && username === blog.author)\r\n                                posts.push(blog);\r\n                        }\r\n                        resolve(posts);\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        async search() {\r\n            this.close();\r\n            let isValid = await this.isValidAccount(this.steemid);\r\n            if (isValid) {\r\n                this.posts = await this.getPosts(this.steemid);\r\n                if (this.posts.length == 0) {\r\n                    this.error = this.$t('missing.no_post_found');\r\n                }\r\n                this.selected = this.posts.length ? this.posts[0].permlink + '?' + this.posts[0].created + 'Z' : ''\r\n            }else{\r\n                this.error = this.$t(\"missing.invalid_account\");\r\n            }\r\n        },\r\n        getEligible(account, date) {\r\n            return new Promise((resolve) => {\r\n                const url = `${this.$store.state.api}/getList?account=${account}&date=${date}`;\r\n                axios.get(url).then((response) => {\r\n                    if (response.status == 200) {\r\n                        let data = response.data;\r\n                        for (let d of data) {\r\n                            if (d.permlink === null) {\r\n                                resolve(d);\r\n                            }\r\n                        }\r\n                        resolve(null);\r\n                    }\r\n                });\r\n\r\n            });\r\n        },\r\n        async submit() {\r\n            const permlink = this.selected.split('?')[0];\r\n            const date = this.selected.split('?')[1];\r\n            let eligible = await this.getEligible(this.steemid, date);\r\n            if (eligible !== null) {\r\n                fetch(`${this.$store.state.api}/report`, {\r\n                    method: 'post', body: JSON.stringify({ account: this.steemid, permlink: permlink, sp: eligible.sp, date: date, hasVoted: false }), headers: {\r\n                        \"Content-Type\": \"application/json;charset=utf-8\"\r\n                    }\r\n                }).then(res => {\r\n                    return res.json();\r\n                }).then((data) => {\r\n                    if (data.error === 'exist') {\r\n                        this.error = data.msg;\r\n                    } else {\r\n                        this.message = \"You have successfully reported the missing vote!\"\r\n                    }\r\n                })\r\n            } else {\r\n                this.error = \"This post is NOT eligible to receive an upvote!\"\r\n            }\r\n\r\n        },\r\n        close() {\r\n            this.error = '';\r\n            this.message = '';\r\n        }\r\n    },\r\n}\r\n</script>","import { render } from \"./Report.vue?vue&type=template&id=0799114a\"\nimport script from \"./Report.vue?vue&type=script&lang=js\"\nexport * from \"./Report.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\schen\\\\Documents\\\\Fun Projects\\\\trailApp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./MissingVoteView.vue?vue&type=template&id=5e56daa1\"\nimport script from \"./MissingVoteView.vue?vue&type=script&lang=js\"\nexport * from \"./MissingVoteView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\schen\\\\Documents\\\\Fun Projects\\\\trailApp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","onChange","$options","$event","_Fragment","_renderList","$data","date","value","key","_hoisted_3","_hoisted_7","onClick","member","name","hasVoted","href","target","src","_toDisplayString","sp","score","incentive","permlink","_hoisted_20","mounted","feather","this","setup","updated","data","voteList","options","currentSort","currentSortDir","computed","sortedMembers","sort","a","b","modifier","methods","async","getDateOptions","getDailyVoteList","Date","s","Promise","resolve","reject","url","$store","state","api","axios","then","response","status","d","votes","totalVotes","toFixed","push","account","catch","err","event","toLocaleDateString","timeZone","formatDate","month","getMonth","day","getDate","year","getFullYear","length","join","toLocaleString","curr","first","i","next","getTime","setDate","toString","__exports__","render","innerHTML","_ctx","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","row","match","offset","str","escaped","cells","split","trim","shift","pop","splice","c","invert","l","suffLen","currChar","slice","findClosingBracket","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","Tokenizer","constructor","space","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","marked","callback","done","pending","setTimeout","message","setOptions","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","lexInline","markdownToHtml","markdownData","_createVNode","_component_Report","_hoisted_6","alt","_hoisted_18","role","xmlns","viewBox","placeholder","disabled","post","created","_hoisted_13","_hoisted_16","steemid","posts","selected","isValidAccount","vote","voter","setHours","setMinutes","setSeconds","setMilliseconds","getPosts","username","limit","blogs","blog","voted","active_votes","author","close","isValid","$t","getEligible","eligible","fetch","method","JSON","stringify","headers","res","json","msg","pendingList","missingList","getPendingList","components","Report"],"sourceRoot":""}